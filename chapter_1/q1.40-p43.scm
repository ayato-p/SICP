(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (let ((close-enough? (lambda (v1 v2)
			 (< (abs (- v1 v2)) tolerance))))
    (letrec ((try (lambda (guess)
		    (let ((next (f guess)))
		      (if (close-enough? guess next)
			  next
			  (try next))))))
      (try first-guess))))

(define dx 0.00001)
(define (deriv g)
  (lambda (x)
    (/ (- (g (+ x dx)) (g x))
       dx)))
(define (newton-transform g)
  (lambda (x)
    (- x (/ (g x) ((deriv g) x)))))
